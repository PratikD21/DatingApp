{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_guards/prevent-unsaved-changes.guard.ts","webpack:///./src/app/_models/pagination.ts","webpack:///./src/app/_resolvers/lists.resolver.ts","webpack:///./src/app/_resolvers/member-detail.resolver.ts","webpack:///./src/app/_resolvers/member-edit.resolver.ts","webpack:///./src/app/_resolvers/member-list.resolver..ts","webpack:///./src/app/_resolvers/messages.resolver.ts","webpack:///./src/app/_services/alertify.service.ts","webpack:///./src/app/_services/auth.service.ts","webpack:///./src/app/_services/error.interceptor.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/lists/lists.component.css","webpack:///./src/app/lists/lists.component.html","webpack:///./src/app/lists/lists.component.ts","webpack:///./src/app/members/member-card/member-card.component.css","webpack:///./src/app/members/member-card/member-card.component.html","webpack:///./src/app/members/member-card/member-card.component.ts","webpack:///./src/app/members/member-detail/member-detail.component.css","webpack:///./src/app/members/member-detail/member-detail.component.html","webpack:///./src/app/members/member-detail/member-detail.component.ts","webpack:///./src/app/members/member-edit/member-edit.component.css","webpack:///./src/app/members/member-edit/member-edit.component.html","webpack:///./src/app/members/member-edit/member-edit.component.ts","webpack:///./src/app/members/member-list/member-list.component.css","webpack:///./src/app/members/member-list/member-list.component.html","webpack:///./src/app/members/member-list/member-list.component.ts","webpack:///./src/app/members/member-messages/member-messages.component.css","webpack:///./src/app/members/member-messages/member-messages.component.html","webpack:///./src/app/members/member-messages/member-messages.component.ts","webpack:///./src/app/members/photo-editor/photo-editor.component.css","webpack:///./src/app/members/photo-editor/photo-editor.component.html","webpack:///./src/app/members/photo-editor/photo-editor.component.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { AlertifyService } from './../_services/alertify.service';\nimport { AuthService } from './../_services/auth.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router,\n    private alertify: AlertifyService) { }\n\n  canActivate(): boolean {\n    if(this.authService.loggedIn()){\n      return true;\n    }\n    \n    this.alertify.error('You shall not pass !!!');\n    this.router.navigate(['/home']);\n    return false;\n  }\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { CanDeactivate } from \"@angular/router\";\r\nimport { MemberEditComponent } from \"../members/member-edit/member-edit.component\";\r\n\r\n@Injectable()\r\nexport class PreventUnsavedChanges implements CanDeactivate<MemberEditComponent>{\r\n    canDeactivate(component : MemberEditComponent){\r\n        if(component.editForm.dirty){\r\n            return confirm('Are you sure you want to continue? Any unsaved changes will be lost');\r\n        }\r\n        return true;\r\n    }\r\n}","export interface Pagination {\n    currentPage: number;\n    itemsPerPage: number;\n    totalItems: number;\n    totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n    result: T;\n    pagination: Pagination;\n}\n\n\n","import { AlertifyService } from '../_services/alertify.service';\r\nimport { UserService } from '../_services/user.service';\r\nimport { User } from '../_models/user';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from \"@angular/router\";\r\nimport { Observable,of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ListsResolver implements Resolve<User[]>{\r\n\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    likesParam = 'Likers';\r\n\r\n    constructor (private userService:UserService, private router:Router, \r\n        private alertify:AlertifyService){}\r\n\r\n    resolve(route: ActivatedRouteSnapshot) : Observable<User[]>{\r\n        return this.userService.getUsers(this.pageNumber, this.pageSize, null, this.likesParam).pipe(\r\n            catchError(error =>{\r\n                this.alertify.error('Problem retrieving data');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}","import { AlertifyService } from './../_services/alertify.service';\r\nimport { UserService } from './../_services/user.service';\r\nimport { User } from './../_models/user';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from \"@angular/router\";\r\nimport { Observable,of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberDetailResolver implements Resolve<User>{\r\n    constructor (private userService:UserService, private router:Router, \r\n        private alertify:AlertifyService){}\r\n\r\n    resolve(route: ActivatedRouteSnapshot) : Observable<User>{\r\n        return this.userService.getUser(route.params['id']).pipe(\r\n            catchError(error =>{\r\n                this.alertify.error('Problem retrieving data');\r\n                this.router.navigate(['/members']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}","import { AuthService } from './../_services/auth.service';\r\nimport { AlertifyService } from './../_services/alertify.service';\r\nimport { UserService } from './../_services/user.service';\r\nimport { User } from './../_models/user';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from \"@angular/router\";\r\nimport { Observable,of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberEditResolver implements Resolve<User>{\r\n    constructor (private userService:UserService, private router:Router, \r\n        private alertify:AlertifyService, private authService:AuthService){}\r\n\r\n    resolve(route: ActivatedRouteSnapshot) : Observable<User>{\r\n        return this.userService.getUser(this.authService.decodedToken.nameid).pipe(\r\n            catchError(error =>{\r\n                this.alertify.error('Problem retrieving data');\r\n                this.router.navigate(['/members']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}","import { AlertifyService } from '../_services/alertify.service';\r\nimport { UserService } from '../_services/user.service';\r\nimport { User } from '../_models/user';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from \"@angular/router\";\r\nimport { Observable,of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberListResolver implements Resolve<User[]>{\r\n\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    constructor (private userService:UserService, private router:Router, \r\n        private alertify:AlertifyService){}\r\n\r\n    resolve(route: ActivatedRouteSnapshot) : Observable<User[]>{\r\n        return this.userService.getUsers(this.pageNumber, this.pageSize).pipe(\r\n            catchError(error =>{\r\n                this.alertify.error('Problem retrieving data');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}","import { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from \"@angular/router\";\r\nimport { Observable,of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Message } from '../_models/message';\r\n\r\n@Injectable()\r\nexport class MessagesResolver implements Resolve<Message[]>{\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    messageContainer = 'Unread';\r\n    constructor (private userService:UserService, private router:Router, \r\n        private alertify:AlertifyService, private authService:AuthService){}\r\n\r\n    resolve(route: ActivatedRouteSnapshot) : Observable<Message[]>{\r\n        return this.userService.getMessages(this.authService.decodedToken.nameid,this.pageNumber, this.pageSize,this.messageContainer).pipe(\r\n            catchError(error =>{\r\n                this.alertify.error('Problem retrieving messages');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport * as alertify from 'alertifyjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AlertifyService {\n\n    constructor() { }\n\n    confirm(message: string, okCallback: () => any) {\n        alertify.confirm(message, function(e) {\n            if (e) {\n                okCallback();\n            } else { }\n        });\n    }\n\n    success(message:string){\n      alertify.success(message);\n    }\n    \n    error(message:string){\n      alertify.error(message);\n    }\n    \n    warning(message:string){\n      alertify.warning(message);\n    }\n    \n    message(message:string){\n      alertify.message(message);\n    }\n}\n","import { User } from './../_models/user';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  baseUrl= environment.apiUrl + 'auth/';\n  jwtHelper= new JwtHelperService()\n  decodedToken:any;\n  currentUser:User;\n  photoUrl = new BehaviorSubject<string>('../../assets/user.png');\n  currentPhotoUrl = this.photoUrl.asObservable();\n\n  constructor(private http: HttpClient) { }\n\n  changeMemberPhoto(photoUrl:string){\n    this.photoUrl.next(photoUrl);\n  }\n\n  login(model: any) {\n    return this.http.post(this.baseUrl + 'login', model )\n      .pipe(\n        map((response: any) =>{\n          const user = response;\n          if(user){\n            localStorage.setItem('token',user.token);\n            localStorage.setItem('user', JSON.stringify(user.user));\n            this.decodedToken=this.jwtHelper.decodeToken(user.token);\n            this.currentUser = user.user;\n            this.changeMemberPhoto(this.currentUser.photoUrl);\n          }\n        })\n      );\n  }\n  register(user:User){\n    return this.http.post(this.baseUrl + 'register', user);\n  }\n\n  loggedIn(){\n    const token = localStorage.getItem('token');\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor{\r\n    intercept(req:HttpRequest<any>, next:HttpHandler):Observable<HttpEvent<any>>{\r\n        return next.handle(req).pipe(\r\n            catchError(error => {\r\n                if(error instanceof HttpErrorResponse){\r\n                    if(error.status===401){\r\n                        return throwError(error.statusText);\r\n                    }\r\n                    const applicationError = error.headers.get('Application-Error');\r\n                    if(applicationError){\r\n                        console.log(applicationError);\r\n                        return throwError(applicationError);\r\n                    }\r\n                    const serverError = error.error;\r\n                    let modalStateErrors='';\r\n                    if(serverError && typeof serverError === 'object'){\r\n                        for(const key in serverError){\r\n                            if(serverError[key]){\r\n                                modalStateErrors +=serverError[key] + '\\n';\r\n                            }\r\n                        }\r\n                    }\r\n                    return throwError(modalStateErrors || serverError || 'Server Error');\r\n                }\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\nexport const ErrorInterceptorProvider = { \r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: ErrorInterceptor,\r\n    multi:true\r\n}","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from './../../environments/environment';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { PaginatedResult } from '../_models/pagination';\nimport { map } from 'rxjs/operators';\nimport { Message } from '../_models/message';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  getUsers(page?, itemsPerPage?, userParams?, likesParams?): Observable<PaginatedResult<User[]>> {\n    const paginatedResult: PaginatedResult<User[]> = new PaginatedResult<User[]>();\n\n    let params = new HttpParams();\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    if (userParams != null) {\n      params = params.append('minAge', userParams.minAge);\n      params = params.append('maxAge', userParams.maxAge);\n      params = params.append('gender', userParams.gender);\n      params = params.append('orderBy', userParams.orderBy);\n    }\n\n    if (likesParams === 'Likers') {\n      params = params.append('likers', 'true');\n    }\n    if (likesParams === 'Likees') {\n      params = params.append('likees', 'true');\n    }\n    return this.http.get<User[]>(this.baseUrl + 'users', { observe: 'response', params })\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') != null) {\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'))\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\n  getUser(id: number): Observable<User> {\n    return this.http.get<User>(this.baseUrl + 'users/' + id);\n  }\n\n  updateUser(id: number, user: User) {\n    return this.http.put(this.baseUrl + 'users/' + id, user);\n  }\n\n  setMainPhoto(userId: number, id: number) {\n    return this.http.post(this.baseUrl + 'users/' + userId + '/photos/' + id + '/setMainPhoto', {});\n  }\n\n  deletePhoto(userId: number, id: number) {\n    return this.http.delete(this.baseUrl + 'users/' + userId + '/photos/' + id);\n  }\n\n  sendLike(id: number, recipientId: number) {\n    return this.http.post(this.baseUrl + 'users/' + id + '/like/' + recipientId, {});\n  }\n\n  getMessages(id: number, page?, itemsPerPage?, messageContainer?: string) {\n    const paginatedResult: PaginatedResult<Message[]> = new PaginatedResult<Message[]>();\n\n    let params = new HttpParams();\n    params = params.append('MessageContainer', messageContainer);\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/messages', {observe: 'response', params})\n      .pipe(\n        map(response =>{\n          paginatedResult.result = response.body\n          if(response.headers.get('Pagination') !== null){\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n\n          return paginatedResult;\n        })\n      )\n  }\n\n  getMessageThread(id:number, recipientId:number){\n    return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/messages/thread/' + recipientId);\n  }\n\n  sendMessage(id: number, message:Message){\n    return this.http.post(this.baseUrl + 'users/' + id + '/messages', message);\n  }\n\n  deleteMessage(id:number, userId:number){\n    return this.http.post(this.baseUrl + 'users/' + userId + '/messages/' + id, {});\n  }\n\n  markAsRead(userId:number, messageId:number){\n    return this.http.post(this.baseUrl + 'users/' + userId + '/messages/' + messageId + '/read',{})\n      .subscribe();\n  }\n}\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-nav></app-nav>\\n<router-outlet></router-outlet>\\n\"","import { User } from './_models/user';\nimport { AuthService } from './_services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  \n  jwtHelper = new JwtHelperService();\n\n  constructor(private authService:AuthService){}\n\n  ngOnInit(){\n    const token=localStorage.getItem('token');\n    const user:User= JSON.parse(localStorage.getItem('user'));\n    if(token){\n      this.authService.decodedToken= this.jwtHelper.decodeToken(token);\n    }\n    if(user){\n      this.authService.currentUser = user;\n      this.authService.changeMemberPhoto(user.photoUrl);\n    }\n  }\n}\n","import { MessagesResolver } from './_resolvers/messages.resolver';\nimport { ListsResolver } from './_resolvers/lists.resolver';\nimport {TimeAgoPipe} from 'time-ago-pipe';\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { MemberListResolver } from './_resolvers/member-list.resolver.';\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { UserService } from './_services/user.service';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { appRoutes } from './routes';\nimport { AlertifyService } from './_services/alertify.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BsDropdownModule, TabsModule, BsDatepickerModule, PaginationModule, ButtonsModule } from 'ngx-bootstrap';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { AuthService } from './_services/auth.service';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\n\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { NgxGalleryModule } from 'ngx-gallery';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\n\nexport function tokenGetter(){\n    return localStorage.getItem('token');\n}\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      NavComponent,\n      HomeComponent,\n      RegisterComponent,\n      MemberListComponent,\n      ListsComponent,\n      MessagesComponent,\n      MemberCardComponent,\n      MemberDetailComponent,\n      MemberEditComponent,\n      PhotoEditorComponent,\n      TimeAgoPipe,\n      MemberMessagesComponent\n   ],\n   imports: [\n      BrowserModule,\n      HttpClientModule,\n      FormsModule,\n      ReactiveFormsModule,\n      TabsModule.forRoot(),\n      BsDropdownModule.forRoot(),\n      BsDatepickerModule.forRoot(),\n      PaginationModule.forRoot(),\n      ButtonsModule.forRoot(),\n      RouterModule.forRoot(appRoutes),\n      NgxGalleryModule,\n      FileUploadModule,\n      JwtModule.forRoot({\n          config:{\n              tokenGetter:tokenGetter,\n              whitelistedDomains:['localhost:5000'],\n              blacklistedRoutes:['localhost:5000/api/auth']\n          }\n      })\n   ],\n   providers: [\n      AuthService,\n      ErrorInterceptorProvider,\n      AlertifyService,\n      AuthGuard,\n      UserService,\n      MemberDetailResolver,\n      MemberListResolver,\n      MemberEditResolver,\n      PreventUnsavedChanges,\n      ListsResolver,\n      MessagesResolver\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <div *ngIf=\\\"!registerMode\\\" style=\\\"text-align: center\\\">\\n    <h1>Find your match</h1>\\n    <p class=\\\"lead\\\">Come on in to view your matches... All you need to do is sign up!</p>\\n    <div class=\\\"text-center\\\">\\n      <button class=\\\"btn btn-primary btn-lg mr-2\\\" (click)=\\\"registerToggle()\\\">Register</button>\\n      <button class=\\\"btn btn-info btn-lg\\\">Learn more</button>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"registerMode\\\" class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-4\\\">\\n        <app-register (cancelRegister)=\\\"cancelRegisterMode($event)\\\"></app-register>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerMode= false;\n\n  constructor(private http:HttpClient) { }\n\n  ngOnInit() {\n  }\n  registerToggle(){\n    this.registerMode=true;\n  }\n  \n  cancelRegisterMode(registerMode:boolean){\n    this.registerMode=registerMode;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"text-center mt-3\\\">\\n  <h2>{{likesParam === 'Likers' ? 'Members who like me' : 'Members who I\\\\'ve Liked'}} : {{pagination.totalItems}}</h2>\\n</div>\\n\\n<div class=\\\"container mt-3\\\">\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"btn-group\\\">\\n    <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"likesParam\\\" btnRadio=\\\"Likers\\\" (click)=\\\"loadUsers()\\\">Members who like me</button>\\n    <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"likesParam\\\" btnRadio=\\\"Likees\\\" (click)=\\\"loadUsers()\\\">Members who I like</button>\\n  </div>\\n</div>\\n\\n<br>\\n\\n<div class=\\\"row\\\">\\n  <div *ngFor=\\\"let user of users\\\" class=\\\"col-sm-6 col-md-4 col-lg-4 col-xl-2\\\">\\n    <app-member-card [user]=\\\"user\\\"></app-member-card>\\n  </div>\\n</div>\\n\\n\\n\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\">\\n<pagination [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\" [(ngModel)]=\\\"pagination.currentPage\\\"\\n  (pageChanged)=\\\"pageChanged($event)\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\"\\n  >\\n\\n</pagination>\\n</div>\"","import { AuthService } from './../_services/auth.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from './../_services/alertify.service';\nimport { UserService } from './../_services/user.service';\nimport { Pagination, PaginatedResult } from './../_models/pagination';\nimport { User } from './../_models/user';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  users : User[];\n  pagination:Pagination;\n  likesParam:string;\n\n  constructor(private userService:UserService,\n    private alertify:AlertifyService,\n    private route:ActivatedRoute,\n    private authService:AuthService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n    this.likesParam = 'Likers'; \n  }\n  loadUsers(){\n    this.userService.getUsers(this.pagination.currentPage, this.pagination.itemsPerPage,null, this.likesParam)\n    .subscribe((res : PaginatedResult<User[]>) =>{\n      this.users = res.result;\n      this.pagination = res.pagination;\n    }, error =>{\n      this.alertify.error(error);\n    });\n  }\n\n  pageChanged(event : any):void{\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n}","module.exports = \".card:hover img{\\r\\n    -webkit-transform: scale(1.2,1.2);\\r\\n            transform: scale(1.2,1.2);\\r\\n    transition-duration: 500ms;\\r\\n    transition-timing-function: ease-out;\\r\\n    opacity: 0.7;\\r\\n}\\r\\n\\r\\n.card img{\\r\\n    -webkit-transform: scale(1.0,1.0);\\r\\n            transform: scale(1.0,1.0);\\r\\n    transition-duration: 500ms;\\r\\n    transition-timing-function: ease-out;\\r\\n}\\r\\n\\r\\n.card-img-wrapper{\\r\\n    overflow: hidden;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.member-icons{\\r\\n    position: absolute;\\r\\n    bottom: -30%;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    margin-right: auto;\\r\\n    margin-left: auto;\\r\\n    opacity: 0;\\r\\n}\\r\\n\\r\\n.card-img-wrapper:hover .member-icons{\\r\\n    bottom: 0;\\r\\n    opacity: 1;\\r\\n}\\r\\n\\r\\n.animate{\\r\\n    transition: all 0.3s ease-in-out;\\r\\n}\"","module.exports = \"<div class=\\\"card mb-4\\\">\\n  <div class=\\\"card-img-wrapper\\\">\\n    <img class=\\\"card-img-top\\\" src=\\\"{{user.photoUrl || '../../../assets/user.png'}}\\\" alt=\\\"{{user.knownAs}}\\\">\\n    <ul class=\\\"list-inline member-icons animate text-center\\\">\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/members/', user.id]\\\"><i class=\\\"fa fa-user\\\"></i></button></li>\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" (click)=\\\"sendLike(user.id)\\\"><i class=\\\"fa fa-heart\\\"></i></button></li>\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/members/', user.id]\\\" [queryParams] = '{tab : 3}'><i class=\\\"fa fa-envelope\\\"></i></button></li>\\n    </ul>\\n  </div>\\n  <div class=\\\"card-body p-1\\\">\\n    <h6 class=\\\"card-title text-center mb-1\\\">\\n      <i class=\\\"fa fa-user\\\"></i\\n        >{{user.knownAs}}, {{user.age}}\\n      </h6>\\n      <p class=\\\"card-text text-muted text-center\\\">{{user.city}}</p>\\n  </div>\\n</div>\"","import { User } from './../../_models/user';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { AuthService } from '../../_services/auth.service';\nimport { UserService } from '../../_services/user.service';\nimport { AlertifyService } from '../../_services/alertify.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() user:User;\n\n  constructor(private authService:AuthService, private userService:UserService, private alertify:AlertifyService) { }\n\n  ngOnInit() {\n\n  }\n\n  sendLike(id:number){\n    this.userService.sendLike(this.authService.decodedToken.nameid, id).subscribe(data =>{\n      this.alertify.success('You have liked: ' + this.user.knownAs);\n    }, error =>{\n      this.alertify.error(error); \n    })\n  }\n\n\n}\n","module.exports = \".img-thumbnail{\\r\\n    margin: 25px;\\r\\n    width: 85%;\\r\\n    height: 85%;\\r\\n}\\r\\n\\r\\n.card-body{\\r\\n    padding: 0 25px;\\r\\n}\\r\\n\\r\\n.card-footer{\\r\\n    padding: 10px 15px;\\r\\n    background-color: #fff;\\r\\n    border-top: none;\\r\\n}\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n  <div class=\\\"row\\\">\\n    <h1>{{user.knownAs}}'s Profile</h1>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <img class=\\\"card-img-top img-thumbnail\\\" src=\\\"{{user?.photoUrl || '../../../assets/user.png'}}\\\" alt=\\\"{{user?.knownAs}}\\\">\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <strong>Locations:</strong>\\n            <p>{{user.city}}, {{user.country}}</p>\\n          </div>\\n          <div>\\n            <strong>Age:</strong>\\n            <p>{{user.age}}</p>\\n          </div>\\n          <div>\\n            <strong>Last Active:</strong>\\n            <p>{{user?.lastActive | timeAgo}}</p>\\n          </div>\\n          <div>\\n            <strong>Member since:</strong>\\n            <p>{{user?.created | date:'mediumDate'}}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <div class=\\\"btn-group d-flex\\\">\\n            <button class=\\\"btn btn-primary w-100\\\">Like</button>\\n            <button class=\\\"btn btn-success w-100\\\" (click)=\\\"selectTabs(3)\\\">Message</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"tab-panel\\\">\\n        <tabset class=\\\"member-tabset\\\" #memberTabs>\\n          <tab heading=\\\"About {{user?.knownAs}}\\\">\\n            <h4>Description</h4>\\n            <p>{{user?.introduction}}</p>\\n            <h4>Looking For</h4>\\n            <p>{{user?.lookingFor}}</p>\\n          </tab>\\n          <tab heading=\\\"Interests\\\">\\n            <h4>Interests</h4>\\n            <p>{{user?.interests}}</p>\\n          </tab>\\n          <tab heading=\\\"Photos\\\">\\n            <ngx-gallery [options]=\\\"galleryOptions\\\" [images]=\\\"galleryImages\\\"></ngx-gallery>\\n          </tab>\\n          <tab heading=\\\"Messages\\\">\\n            <app-member-messages [recipientId]=\\\"user.id\\\"></app-member-messages>\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { UserService } from './../../_services/user.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from '../../_models/user';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from 'ngx-gallery';\nimport { TabsetComponent } from 'ngx-bootstrap';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit {\n  @ViewChild('memberTabs') memberTabs: TabsetComponent;\n   \n  user:User;\n  galleryOptions:NgxGalleryOptions[];\n  galleryImages:NgxGalleryImage[];\n  constructor(private userService:UserService, private alertify:AlertifyService, private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data =>{\n      this.user = data['user'];\n    });\n\n    this.route.queryParams.subscribe(params =>{\n      const selectedTab = params['tab'];\n      this.memberTabs.tabs[selectedTab>0 ? selectedTab : 0].active = true;\n    });\n\n    this.galleryOptions =[\n      {\n        width:'500px',\n        height:'500px',\n        imagePercent:100,\n        thumbnailsColumns:4,\n        imageAnimation:NgxGalleryAnimation.Slide,\n        preview:false\n      }\n    ];\n\n    this.galleryImages = this.getImages();\n  }\n\n  getImages(){\n    const imageUrls =[];\n    for(let i=0;i<this.user.photos.length;i++){\n      imageUrls.push({\n        small:this.user.photos[i].url,\n        medium:this.user.photos[i].url,\n        big:this.user.photos[i].url,\n        description:this.user.photos[i].description\n      });\n    }\n    return imageUrls;\n  }\n\n  selectTabs(tabId: number){\n    this.memberTabs.tabs[tabId].active = true;\n  }\n}\n","module.exports = \".img-thumbnail{\\r\\n    margin: 25px;\\r\\n    width: 85%;\\r\\n    height: 85%;\\r\\n}\\r\\n\\r\\n.card-body{\\r\\n    padding: 0 25px;\\r\\n}\\r\\n\\r\\n.card-footer{\\r\\n    padding: 10px 15px;\\r\\n    background-color: #fff;\\r\\n    border-top: none;\\r\\n}\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <h1>Your Profile</h1>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div *ngIf=\\\"editForm.dirty\\\" class=\\\"alert alert-info\\\">\\n        <strong>Information:</strong> You have made changes. Any unsaved changes will be lost!\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <img class=\\\"card-img-top img-thumbnail\\\" src=\\\"{{photoUrl || '../../../assets/user.png'}}\\\" alt=\\\"{{user?.knownAs}}\\\">\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <strong>Locations:</strong>\\n            <p>{{user.city}}, {{user.country}}</p>\\n          </div>\\n          <div>\\n            <strong>Age:</strong>\\n            <p>{{user.age}}</p>\\n          </div>\\n          <div>\\n            <strong>Last Active:</strong>\\n            <p>{{user?.lastActive | timeAgo}}</p>\\n          </div>\\n          <div>\\n            <strong>Member since:</strong>\\n            <p>{{user?.created | date:'mediumDate'}}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <button class=\\\"btn btn-success btn-block\\\" form=\\\"editForm\\\" [disabled]=\\\"!editForm.dirty\\\">Save Changes</button>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"tab-panel\\\">\\n        <tabset class=\\\"member-tabset\\\">\\n          <tab heading=\\\"Edit Profile\\\">\\n            <form #editForm=\\\"ngForm\\\" id=\\\"editForm\\\" (ngSubmit)=\\\"updateUser()\\\">\\n              <h4>Description</h4>\\n              <textarea class=\\\"form-control\\\" name=\\\"introduction\\\" rows=\\\"6\\\" [(ngModel)]=\\\"user.introduction\\\"></textarea>\\n              <h4>Looking For</h4>\\n              <textarea class=\\\"form-control\\\" name=\\\"lookingFor\\\" rows=\\\"6\\\" [(ngModel)]=\\\"user.lookingFor\\\"></textarea>\\n              <h4>Looking For</h4>\\n              <textarea class=\\\"form-control\\\" name=\\\"interests\\\" rows=\\\"6\\\" [(ngModel)]=\\\"user.interests\\\"></textarea>\\n              <h4>Location Details:</h4>\\n              <div class=\\\"form-inline\\\">\\n                <label for=\\\"city\\\"></label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"city\\\" [(ngModel)]=\\\"user.city\\\">\\n                <label for=\\\"country\\\"></label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"country\\\" [(ngModel)]=\\\"user.country\\\">\\n              </div>\\n            </form>\\n\\n          </tab>\\n          <tab heading=\\\"Edit Photos\\\">\\n            <app-photo-editor [photos]=\\\"user.photos\\\" (getMemberPhotoChange)=\\\"updateMainPhoto($event)\\\"></app-photo-editor>\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { AuthService } from './../../_services/auth.service';\nimport { UserService } from './../../_services/user.service';\nimport { AlertifyService } from './../../_services/alertify.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { User } from '../../_models/user';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild('editForm') editForm:NgForm;\n  @HostListener('window:beforeunload',['$event'])\n  user:User;\n  photoUrl:string;\n\n  unloadNotification($event:any){\n    if(this.editForm.dirty){\n      $event.returnValue = true;\n    }\n  }\n  \n  constructor(private route:ActivatedRoute, private alertify:AlertifyService, \n    private userService:UserService, private authService:AuthService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data =>{\n      this.user = data['user'];\n    });\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl=photoUrl);\n  }\n\n  updateUser(){\n    this.userService.updateUser(this.authService.decodedToken.nameid, this.user).subscribe(\n      next=> {\n        this.alertify.success('Profile updated successfully');\n        this.editForm.reset(this.user);\n      }, error =>{\n        this.alertify.error(error);\n      });  \n  }\n\n  updateMainPhoto(photoUrl){\n    this.user.photoUrl = photoUrl;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"text-center mt-3\\\">\\n  <h2>Your matches - {{pagination.totalItems}} found</h2>\\n</div>\\n\\n<div class=\\\"container mt-3\\\">\\n  <form class=\\\"form-inline\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"loadUsers()\\\" novalidate>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"minAge\\\">Age From</label>\\n      <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 70px\\\" id=\\\"minAge\\\" [(ngModel)]=\\\"userParams.minAge\\\" name=\\\"minAge\\\">\\n    </div>\\n\\n    <div class=\\\"form-group px-2\\\">\\n      <label for=\\\"maxAge\\\">Age To</label>\\n      <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 70px\\\" id=\\\"maxAge\\\" [(ngModel)]=\\\"userParams.maxAge\\\" name=\\\"maxAge\\\">\\n    </div>\\n\\n    <div class=\\\"form-group px-2\\\">\\n      <label for=\\\"gender\\\">Show: </label>\\n      <select class=\\\"form-control ml-1\\\" style=\\\"width: 130px\\\" id=\\\"gender\\\" name=\\\"gender\\\" [(ngModel)]=\\\"userParams.gender\\\">\\n        <option *ngFor=\\\"let gender of genderList\\\" [value]=\\\"gender.value\\\">\\n          {{gender.display}}\\n        </option>\\n      </select>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-left:10px\\\">Apply Filters</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-info\\\" style=\\\"margin-left:10px\\\" (click)=\\\"resetFilter()\\\">Reset Filter</button>\\n\\n    <div class=\\\"col\\\">\\n        <div class=\\\"btn-group float-right\\\">\\n          <button type=\\\"button\\\" name=\\\"orderBy\\\" [(ngModel)]=\\\"userParams.orderBy\\\" (click)=\\\"loadUsers()\\\" class=\\\"btn btn-primary\\\" btnRadio=\\\"lastActive\\\">Last Active</button>\\n          <button type=\\\"button\\\" name=\\\"orderBy\\\" [(ngModel)]=\\\"userParams.orderBy\\\" (click)=\\\"loadUsers()\\\" class=\\\"btn btn-primary\\\" btnRadio=\\\"created\\\">Newest Members</button>\\n        </div>\\n    </div>\\n  </form>\\n  <br>\\n  <!-- <p *ngFor=\\\"let gender of genderList\\\">\\n    {{gender.display}}\\n  </p> -->\\n  <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let user of users\\\" class=\\\"col-lg-2 col-md-3 col-sm-6\\\">\\n      <app-member-card [user]=\\\"user\\\"></app-member-card>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"d-flex justify-content-center\\\">\\n  <pagination [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n    [(ngModel)]=\\\"pagination.currentPage\\\" (pageChanged)=\\\"pageChanged($event)\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\"\\n    firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n  </pagination>\\n</div>\"","import { PaginatedResult } from './../../_models/pagination';\nimport { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\nimport { User } from '../../_models/user';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { UserService } from './../../_services/user.service';\nimport { Pagination } from '../../_models/pagination';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n  users: User[];\n  pagination:Pagination;\n  user:User = JSON.parse(localStorage.getItem('user'));\n  genderList = [{value:'male', display:'Males'},{value:'female', display:'Females'}]\n  userParams: any = {};\n  constructor(private userService: UserService, private alertify:AlertifyService, private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n\n    this.userParams.gender = this.user.gender=='female' ? 'male' : 'female';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.userParams.OrderBy = 'lastActive';\n  }\n\n  resetFilter(){\n    this.userParams.gender = this.user.gender=='female' ? 'male' : 'female';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.loadUsers();\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n  loadUsers(){\n    this.userService.getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, this.userParams)\n      .subscribe((res:PaginatedResult<User[]>) => {\n      this.users = res.result;\n      this.pagination = res.pagination;\n    }, error =>{\n      this.alertify.error(error);\n    });\n  }\n\n}\n","module.exports = \".card{\\r\\n    border:none;\\r\\n}\\r\\n\\r\\n.chat{\\r\\n    list-style: none;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.chat li{\\r\\n    margin-bottom: 10px;\\r\\n    padding-bottom: 10px;\\r\\n    border-bottom: 1px dotted #B3A9A9;\\r\\n}\\r\\n\\r\\n.rounded-circle{\\r\\n    height: 50px;\\r\\n    width: 50px;\\r\\n}\\r\\n\\r\\n.card-body{\\r\\n    overflow-y: scroll;\\r\\n    height: 400px;\\r\\n}\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <div *ngIf=\\\"messages?.length ===0\\\">\\n      <p>No messages yet... say hi my using the message box below</p>\\n    </div>\\n\\n    <ul class=\\\"chat\\\">\\n      <li *ngFor=\\\"let message of messages\\\">\\n        <!-- to them -->\\n        <div *ngIf=\\\"message.senderId == recipientId\\\">\\n          <span class=\\\"chat-img float-left\\\">\\n            <img src=\\\"{{message.senderPhotoUrl}}\\\" alt=\\\"{{message.senderKnownAs}}\\\" class=\\\"rounded-circle\\\">\\n          </span>\\n          <div class=\\\"chat-body\\\">\\n            <div class=\\\"header\\\">\\n              <strong class=\\\"primary-font\\\">{{message.senderKnownAs}}</strong>\\n              <small class=\\\"text-muted float-right\\\">\\n                <span class=\\\"fa fa-clock-o\\\">{{message.messageSent | timeAgo}}</span>\\n              </small>\\n            </div>\\n            <p>{{message.content}}</p>\\n          </div>\\n        </div>\\n        <!-- to me -->\\n        <div *ngIf=\\\"message.senderId != recipientId\\\">\\n          <span class=\\\"chat-img float-right\\\">\\n            <img src=\\\"{{message.senderPhotoUrl}}\\\" alt=\\\"{{message.senderKnownAs}}\\\" class=\\\"rounded-circle\\\">\\n          </span>\\n          <div class=\\\"chat-body\\\">\\n            <div class=\\\"header\\\">\\n                <small class=\\\"text-muted \\\">\\n                    <span class=\\\"fa fa-clock-o\\\">{{message.messageSent | timeAgo}}</span>\\n                    <span *ngIf=\\\"!message.isRead\\\" class=\\\"text-danger\\\">(unread)</span>\\n                    <span *ngIf=\\\"message.isRead\\\" class=\\\"text-success\\\">(Read {{message.dateRead | timeAgo }})</span>\\n                    \\n                  </small>\\n              <strong class=\\\"primary-font float-right\\\" >{{message.senderKnownAs}}</strong>\\n              \\n            </div>\\n            <p>{{message.content}}</p>\\n          </div>\\n        </div>\\n        \\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"card-footer\\\">\\n    <form #messageForm=\\\"ngForm\\\" (ngSubmit)=\\\"messageForm.valid && sendMessage()\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\"\\n          [(ngModel)]=\\\"newMessage.content\\\"\\n          name=\\\"content\\\"\\n          required \\n          class=\\\"form-control input-sm\\\" placeholder=\\\"send a private message\\\">\\n        <div class=\\\"input-group-append\\\">\\n          <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!messageForm.valid\\\">Send</button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"","import { AlertifyService } from './../../_services/alertify.service';\nimport { AuthService } from './../../_services/auth.service';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { Message } from '../../_models/message';\nimport { UserService } from '../../_services/user.service';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n\n  @Input() recipientId:number; \n  messages:Message[];\n  newMessage: any = {};\n  \n  constructor(private userService:UserService, private authService:AuthService, private alertify:AlertifyService) { }\n\n  ngOnInit() {\n    this.loadMessages();\n  }\n\n  loadMessages(){\n    const currentUserId = +this.authService.decodedToken.nameid;\n    this.userService.getMessageThread(this.authService.decodedToken.nameid, this.recipientId)\n      .pipe(\n        tap(messages =>{\n          for(let i=0; i<messages.length;i++){\n            if(messages[i].isRead==false  && messages[i].recipientId === currentUserId) {\n               this.userService.markAsRead(currentUserId, messages[i].id)\n            }\n          }\n        })\n      )\n      .subscribe(message =>{\n        this.messages = message;\n      }, error =>{\n        this.alertify.error(error);\n      });\n  }\n\n  sendMessage(){\n    this.newMessage.recipientId = this.recipientId;\n    this.userService.sendMessage(this.authService.decodedToken.nameid, this.newMessage)\n      .subscribe((message:Message) =>{\n        this.messages.unshift(message);\n        this.newMessage.content = '';\n      }, error =>{\n        this.alertify.error(error);\n      })\n  }\n\n\n}\n","module.exports = \"img.img-thumbnail{\\r\\n    height: 100px;\\r\\n    min-width: 100px !important;\\r\\n    margin-bottom: 2px; \\r\\n}\\r\\n\\r\\n.nv-file-over{\\r\\n    border:dotted 3px red;\\r\\n}\\r\\n\\r\\ninput[type=file]{\\r\\n    color: transparent;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-2\\\" *ngFor=\\\"let photo of photos\\\">\\n    <img src=\\\"{{photo.url}}\\\" class=\\\"img-thumbnail p-1\\\" alt=\\\"\\\">\\n    <div class=\\\"text-center\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm mr-1\\\" \\n        (click)=\\\"setMainPhoto(photo)\\\" \\n        [ngClass]=\\\"photo.isMain ? 'btn-success active' : 'btn-secondary'\\\"\\n        [disabled]=\\\"photo.isMain\\\">Main</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" \\n        (click)=\\\"deletePhoto(photo.id)\\\"\\n        [disabled]=\\\"photo.isMain\\\"><i class=\\\"fa fa-trash-o\\\"></i></button>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row mt-3\\\">\\n \\n  <div class=\\\"col-md-3\\\">\\n\\n      <h3>Add Photos</h3>\\n\\n      <div ng2FileDrop\\n           [ngClass]=\\\"{'nv-file-over': hasBaseDropZoneOver}\\\"\\n           (fileOver)=\\\"fileOverBase($event)\\\"\\n           [uploader]=\\\"uploader\\\"\\n           class=\\\"card bg-faded p-3 text-center mb-3 my-drop-zone\\\">\\n           <i class=\\\"fa fa-upload fa-3x\\\"></i>\\n          Drop Photos here\\n      </div>\\n\\n      Multiple\\n      <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" multiple  /><br/>\\n\\n      Single\\n      <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n  </div>\\n\\n  <div class=\\\"col-md-9\\\" style=\\\"margin-bottom: 40px\\\" *ngIf=\\\"uploader?.queue?.length\\\">\\n\\n      <h3>Upload queue</h3>\\n      <p>Queue length: {{ uploader?.queue?.length }}</p>\\n\\n      <table class=\\\"table\\\">\\n          <thead>\\n          <tr>\\n              <th width=\\\"50%\\\">Name</th>\\n              <th>Size</th>\\n              \\n          </tr>\\n          </thead>\\n          <tbody>\\n          <tr *ngFor=\\\"let item of uploader.queue\\\">\\n              <td><strong>{{ item?.file?.name }}</strong></td>\\n              <td *ngIf=\\\"uploader.options.isHTML5\\\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\n              \\n          </tr>\\n          </tbody>\\n      </table>\\n\\n      <div>\\n          <div>\\n              Queue progress:\\n              <div class=\\\"progress mb-4\\\" >\\n                  <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': uploader.progress + '%' }\\\"></div>\\n              </div>\\n          </div>\\n          <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\"\\n                  (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n              <span class=\\\"fa fa-upload\\\"></span> Upload \\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-warning btn-s\\\"\\n                  (click)=\\\"uploader.cancelAll()\\\" [disabled]=\\\"!uploader.isUploading\\\">\\n              <span class=\\\"fa fa-ban\\\"></span> Cancel \\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger btn-s\\\"\\n                  (click)=\\\"uploader.clearQueue()\\\" [disabled]=\\\"!uploader.queue.length\\\">\\n              <span class=\\\"fa fa-trash\\\"></span> Remove \\n          </button>\\n      </div>\\n\\n  </div>\\n\\n</div>\"","import { environment } from './../../../environments/environment';\nimport { Photo } from './../../_models/photo';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { AuthService } from '../../_services/auth.service';\nimport { UserService } from '../../_services/user.service';\nimport { AlertifyService } from '../../_services/alertify.service';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() photos: Photo[];\n  @Output() getMemberPhotoChange = new EventEmitter<string>();\n  uploader:FileUploader;\n  hasBaseDropZoneOver:boolean = false;\n  baseUrl = environment.apiUrl;\n  currentMainPhoto:Photo;\n \n  constructor(private authService:AuthService, private userService:UserService,\n    private alertify:AlertifyService) { }\n\n  ngOnInit() {\n    this.initializeUploader();\n  }\n\n  fileOverBase(e:any):void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  initializeUploader(){\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'users/' + this.authService.decodedToken.nameid + '/photos',\n      authToken:'Bearer ' + localStorage.getItem('token'),\n      isHTML5: true,\n      allowedFileType:['image'], \n      removeAfterUpload:true,\n      autoUpload:false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {file.withCredentials = false;};\n\n    this.uploader.onSuccessItem = (item, response, status, headers) =>{\n      if(response){\n        const res: Photo = JSON.parse(response);\n        const photo ={\n          id: res.id,\n          url:res.url,\n          dateAdded:res.dateAdded,\n          description:res.description,\n          isMain:res.isMain \n        };\n\n        this.photos.push(photo);\n\n        if(photo.isMain){\n          this.authService.changeMemberPhoto(photo.url);\n          this.authService.currentUser.photoUrl=photo.url;\n          localStorage.setItem('user', JSON.stringify(this.authService.currentUser));    \n        }\n      }\n    }\n  }\n\n  setMainPhoto(photo:Photo){\n    this.userService.setMainPhoto(this.authService.decodedToken.nameid, photo.id).subscribe(()=>{\n      this.currentMainPhoto = this.photos.filter(p => p.isMain == true)[0];\n      this.currentMainPhoto.isMain = false;\n      photo.isMain = true;\n      this.authService.changeMemberPhoto(photo.url);\n      this.authService.currentUser.photoUrl=photo.url;\n      localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n    }, error =>{\n      this.alertify.error(error);\n    });\n  }\n\n  deletePhoto(id:number){\n    this.alertify.confirm(\"Are you sure you want to delete this photo?\", () => {\n      this.userService.deletePhoto(this.authService.decodedToken.nameid, id).subscribe(()=>{\n        this.photos.splice(this.photos.findIndex(p => p.id === id),1);\n        this.alertify.success(\"Photo has been deleted successfully\");\n      }, error =>{\n        this.alertify.error('Failed to delete the photo');\n      });\n    });\n  }\n}\n","module.exports = \"table{\\r\\n    margin-top: 15px;\\r\\n}\\r\\n\\r\\n.img-circle{\\r\\n    max-height: 50px;\\r\\n}\\r\\n\\r\\ntd{\\r\\n    vertical-align: middle;\\r\\n}\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"btn-group\\\">\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Unread\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-envelope\\\"></i> Unread\\n      </button>\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Inbox\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-envelope-open\\\"></i> Inbox\\n      </button>\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Outbox\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-paper-plane\\\"></i> Outbox\\n      </button>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"messages.length == 0\\\">\\n    <h3>No messages</h3>\\n  </div>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"messages.length > 0\\\">\\n    <table class=\\\"table table-hover\\\" style=\\\"cursor: pointer\\\">\\n      <tr>\\n        <th style=\\\"width: 40%\\\">Message</th>\\n        <th style=\\\"width: 20%\\\">From / To</th>\\n        <th style=\\\"width: 20%\\\">Sent / Received</th>\\n        <th style=\\\"width: 20%\\\"></th>\\n      </tr>\\n      <tr *ngFor=\\\"let message of messages\\\" [routerLink]=\\\"['/members', \\n        messageContainer == 'Outbox' ? message.recipientId : message.senderId]\\\" [queryParams]=\\\"{tab: 3}\\\">\\n        <td>{{message.content}}</td>\\n        <td>\\n          <div *ngIf=\\\"messageContainer != 'Outbox'\\\">\\n                <img src={{message?.senderPhotoUrl}} class=\\\"img-circle rounded-circle mr-1\\\">\\n                <strong>{{message.senderKnownAs}}</strong>\\n          </div>\\n          <div *ngIf=\\\"messageContainer == 'Outbox'\\\">\\n                <img src={{message?.recipientPhotoUrl}} class=\\\"img-circle rounded-circle mr-1\\\">\\n                <strong>{{message.recipientKnownAs}}</strong>\\n          </div>\\n        </td>\\n        <td>{{message.messageSent | timeAgo}}</td>\\n        <td>\\n          <button class=\\\"btn btn-danger\\\" (click)=\\\"$event.stopPropagation()\\\" (click)=\\\"deleteMessage(message.id)\\\">Delete</button>\\n        </td>\\n      </tr>\\n    </table>\\n\\n  </div>\\n\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\">\\n    <pagination [boundaryLinks]=\\\"true\\\" \\n                [totalItems]=\\\"pagination.totalItems\\\"\\n                [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n                [(ngModel)]=\\\"pagination.currentPage\\\"\\n                (pageChanged)=\\\"pageChanged($event)\\\"\\n              previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n  </pagination>\\n  </div>\"","import { AlertifyService } from './../_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from './../_services/auth.service';\nimport { Pagination, PaginatedResult } from './../_models/pagination';\nimport { Component, OnInit } from '@angular/core';\nimport { Message } from '../_models/message';\nimport { UserService } from '../_services/user.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  messages : Message[];\n  pagination: Pagination;\n  messageContainer = 'Unread';\n  constructor(private userService: UserService, private authService:AuthService,\n      private route:ActivatedRoute, private alertify:AlertifyService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.messages = data['messages'].result;\n      this.pagination = data['messages'].pagination;\n    });\n  }\n\n  loadMessages(){\n    this.userService.getMessages(this.authService.decodedToken.nameid, this.pagination.currentPage, \n        this.pagination.itemsPerPage, this.messageContainer).subscribe((res: PaginatedResult<Message[]>)=>\n        {\n          this.messages = res.result;\n          this.pagination = res.pagination;\n        }, error =>{\n          this.alertify.error(error);\n        });\n  }\n\n  pageChanged(event: any): void{\n    this.pagination.currentPage = event.page;\n    this.loadMessages();\n  }\n\n  deleteMessage(id:number){\n      this.alertify.confirm('Are you sure you want to delete this message', ()=>{\n        this.userService.deleteMessage(id, this.authService.decodedToken.nameid).subscribe(()=>{\n          this.messages.splice(this.messages.findIndex(m=>m.id === id),1 );\n          this.alertify.success('Message has been deleted');\n        }, error=>{\n          this.alertify.error('Failed to delete the message');\n        });\n      });\n  }\n}\n","module.exports = \".dropdown-toggle, .dropdown-item{\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\nimg{\\r\\n    max-height: 50px;\\r\\n    border: 2px solid white;\\r\\n    display: inline;\\r\\n}\\r\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark  bg-primary\\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\">Dating App</a>\\n    <ul *ngIf=\\\"loggedIn()\\\" class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/members']\\\">Matches</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/lists']\\\">Lists</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/messages']\\\">Messages</a>\\n      </li>\\n    </ul>\\n\\n    <div *ngIf=\\\"loggedIn()\\\" class=\\\"dropdown\\\" dropdown>\\n      <span class=\\\"mr-1\\\">\\n        <img src=\\\"{{photoUrl || '../../assets/user.png'}}\\\" alt=\\\"\\\">\\n      </span>\\n      <a class=\\\"dropdown-toggle text-light\\\" dropdownToggle>\\n        Welcome {{authService.decodedToken?.unique_name | titlecase}}\\n      </a>\\n      <div class=\\\"dropdown-menu mt-3\\\" *dropdownMenu>\\n        <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/member/edit']\\\" ><i class=\\\"fa fa-user\\\"></i>Edit Profile</a>\\n        <div class=\\\"dropdown-divider\\\"></div>\\n        <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\"><i class=\\\"fa fa-sign-out\\\"></i> Logout</a>\\n      </div>\\n    </div>\\n\\n    <form *ngIf=\\\"!loggedIn()\\\" #loginForm=\\\"ngForm\\\" class=\\\"form-inline my-2 my-lg-0\\\" (ngSubmit)=\\\"login()\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" required [(ngModel)]=\\\"model.username\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" required [(ngModel)]=\\\"model.password\\\">\\n      <button [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-success my-2 my-sm-0\\\" type=\\\"submit\\\">Login</button>\\n    </form>\\n  </div>\\n</nav>\"","import { AlertifyService } from './../_services/alertify.service';\nimport { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  model : any = {};\n  photoUrl:string;\n  constructor(public authService:AuthService, private alertify:AlertifyService, \n    private router:Router) { }\n\n  ngOnInit() {\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl=photoUrl);\n  }\n\n  login()\n  {\n    this.authService.login(this.model).subscribe(next =>{\n      this.alertify.success('Logged in successfully');\n\n    }, error =>{\n      this.alertify.error(error);\n    }, ()=>{\n      this.router.navigate(['/members']);\n    })\n  }\n\n  loggedIn()\n  {\n    return this.authService.loggedIn();\n  }\n\n  logout(){\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    this.authService.decodedToken =null;\n    this.authService.currentUser =null;\n    this.alertify.message('logged out');\n    this.router.navigate(['/home']);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\n  <h2 class=\\\"text-center text-primary\\\">Sign Up</h2>\\n  <hr>\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"control-label\\\" style=\\\"margin-right:10px\\\">I am a: </label>\\n    <label class=\\\"radio-inline\\\">\\n      <input class=\\\"mr-3\\\" type=\\\"radio\\\" value=\\\"male\\\" formControlName=\\\"gender\\\">Male\\n    </label>\\n    <label class=\\\"radio-inline ml-3\\\">\\n      <input class=\\\"mr-3\\\" type=\\\"radio\\\" value=\\\"female\\\" formControlName=\\\"gender\\\">Female\\n    </label>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"text\\\" [ngClass]=\\\"{'is-invalid': registerForm.get('username').errors && registerForm.get('username').touched}\\\"\\n      class=\\\"form-control\\\" formControlName=\\\"username\\\" placeholder=\\\"Username\\\">\\n    <div class=\\\"invalid-feedback\\\">Please choose a username</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('knownAs').errors && registerForm.get('knownAs').touched}\\\" class=\\\"form-control\\\"\\n      placeholder=\\\"Known as\\\" formControlName=\\\"knownAs\\\">\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('knownAs').touched && registerForm.get('knownAs').hasError('required')\\\">Known\\n      as is required</div>\\n  </div>\\n  \\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('dateOfBirth').errors && registerForm.get('dateOfBirth').touched}\\\" class=\\\"form-control\\\"\\n      placeholder=\\\"Date of Birth\\\" formControlName=\\\"dateOfBirth\\\" type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\">\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\\\">Date of Birth is required</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\\\" class=\\\"form-control\\\"\\n      placeholder=\\\"City\\\" formControlName=\\\"city\\\">\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\\\">City is required</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\\\" class=\\\"form-control\\\"\\n      placeholder=\\\"Country\\\" formControlName=\\\"country\\\">\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\\\">Country is required</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"password\\\" [ngClass]=\\\"{'is-invalid': registerForm.get('password').errors && registerForm.get('password').touched}\\\"\\n      class=\\\"form-control\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\">\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('required') && registerForm.get('password').touched\\\">Password\\n      is required</div>\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('minlength') && registerForm.get('password').touched\\\">Password\\n      must be atleast 4 characters</div>\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('maxlength') && registerForm.get('password').touched\\\">Password\\n      can not exceed 8 characters</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"password\\\" [ngClass]=\\\"{'is-invalid': registerForm.get('confirmPassword').errors \\n        && registerForm.get('confirmPassword').touched \\n        || registerForm.get('confirmPassword').touched\\n        && registerForm.hasError('mismatch')}\\\"\\n      class=\\\"form-control\\\" formControlName=\\\"confirmPassword\\\" placeholder=\\\"Confirm Password\\\">\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('confirmPassword').hasError('required') && registerForm.get('confirmPassword').touched\\\">Password\\n      is required</div>\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.hasError('mismatch') && registerForm.get('confirmPassword').touched\\\">Password\\n      must match</div>\\n  </div>\\n\\n  <div class=\\\"form-group text-center\\\">\\n    <button class=\\\"btn btn-success\\\" [disabled]=\\\"!registerForm.valid\\\" type=\\\"submit\\\">Register</button>\\n    <button class=\\\"btn btn-default ml-2\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n  </div>\\n\\n</form>\\n\"","import { Router } from '@angular/router';\nimport { User } from './../_models/user';\nimport { AlertifyService } from './../_services/alertify.service';\nimport { AuthService } from './../_services/auth.service';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  @Output() cancelRegister = new EventEmitter();\n\n  user: User;\n  registerForm:FormGroup;\n  bsConfig:Partial<BsDatepickerConfig>;\n\n  constructor(private authService: AuthService, private alertify:AlertifyService, \n    private fb:FormBuilder, private router:Router) { }\n\n  ngOnInit() {\n    // this.registerForm = new FormGroup({\n    //   username: new FormControl('', Validators.required),\n    //   password: new FormControl('',\n    //     [Validators.required, Validators.minLength(4),Validators.maxLength(8)]),\n    //   confirmPassword: new FormControl('',Validators.required)\n    // }, this.passwordMatchValidator);\n    this.bsConfig ={\n      containerClass:'theme-red'\n    },\n    this.createRegisterForm();\n  }\n\n  createRegisterForm(){\n    this.registerForm = this.fb.group({\n      gender: ['male'],\n      username: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      dateOfBirth: [null, Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required], \n      password: ['', [Validators.required, Validators.minLength(4),Validators.maxLength(8)]],\n      confirmPassword:['', Validators.required]\n    },{validator:this.passwordMatchValidator});\n  }\n\n  passwordMatchValidator(g: FormGroup){\n    return g.get('password').value === g.get('confirmPassword').value ? null : {'mismatch':true}\n  }\n\n  register() {\n    if(this.registerForm.valid){\n      this.user = Object.assign({}, this.registerForm.value); \n      this.authService.register(this.user).subscribe(()=>{\n        this.alertify.success('Registration successful');\n      }, error =>{\n        this.alertify.error(error);   \n      }, ()=>{\n        this.authService.login(this.user).subscribe(()=>{\n          this.router.navigate(['/members']);\n        });\n      });\n    }\n    // this.authService.register(this.model).subscribe(() => {\n    //   this.alertify.success('Registration successfull')\n    // }, error => {\n    //   this.alertify.error(error);\n    // });\n\n    //console.log(this.registerForm.value);\n  }\n\n  cancel() {\n    this.cancelRegister.emit(false);\n  }\n\n}\n","import { MessagesResolver } from './_resolvers/messages.resolver';\r\nimport { ListsResolver } from './_resolvers/lists.resolver';\r\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\r\nimport { MemberListResolver } from './_resolvers/member-list.resolver.';\r\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\r\n\r\nexport const appRoutes:Routes = [\r\n    { path: '', component:HomeComponent },\r\n    {\r\n        path:'',\r\n        runGuardsAndResolvers:'always',\r\n        canActivate:[AuthGuard],\r\n        children:[\r\n            { path: 'members', component:MemberListComponent, resolve:{users:MemberListResolver} },\r\n            { path: 'members/:id', component:MemberDetailComponent, resolve:{user: MemberDetailResolver} },\r\n            { path: 'member/edit', component:MemberEditComponent, \r\n                resolve:{user: MemberEditResolver}, canDeactivate:[PreventUnsavedChanges] },\r\n            { path: 'messages', component:MessagesComponent, resolve: {messages : MessagesResolver} },\r\n            { path: 'lists', component:ListsComponent, resolve:{users:ListsResolver} }\r\n        ]\r\n    },\r\n    { path: '**', redirectTo:'', pathMatch:'full' },\r\n];","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}